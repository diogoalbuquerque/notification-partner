// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_usecase is a generated GoMock package.
package usecase_test

import (
	context "context"
	reflect "reflect"

	entity "github.com/diogoalbuquerque/sub-notifier/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderMySQLRepo is a mock of OrderMySQLRepo interface.
type MockOrderMySQLRepo struct {
	ctrl     *gomock.Controller
	recorder *MockOrderMySQLRepoMockRecorder
}

// MockOrderMySQLRepoMockRecorder is the mock recorder for MockOrderMySQLRepo.
type MockOrderMySQLRepoMockRecorder struct {
	mock *MockOrderMySQLRepo
}

// NewMockOrderMySQLRepo creates a new mock instance.
func NewMockOrderMySQLRepo(ctrl *gomock.Controller) *MockOrderMySQLRepo {
	mock := &MockOrderMySQLRepo{ctrl: ctrl}
	mock.recorder = &MockOrderMySQLRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderMySQLRepo) EXPECT() *MockOrderMySQLRepoMockRecorder {
	return m.recorder
}

// FindOnlineOrderNumber mocks base method.
func (m *MockOrderMySQLRepo) FindOnlineOrderNumber(ctx context.Context, seqOnlineOrderRf string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOnlineOrderNumber", ctx, seqOnlineOrderRf)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOnlineOrderNumber indicates an expected call of FindOnlineOrderNumber.
func (mr *MockOrderMySQLRepoMockRecorder) FindOnlineOrderNumber(ctx, seqOnlineOrderRf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOnlineOrderNumber", reflect.TypeOf((*MockOrderMySQLRepo)(nil).FindOnlineOrderNumber), ctx, seqOnlineOrderRf)
}

// GetRequestedOrder mocks base method.
func (m *MockOrderMySQLRepo) GetRequestedOrder(ctx context.Context, seqOnlineOrder string) (*entity.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequestedOrder", ctx, seqOnlineOrder)
	ret0, _ := ret[0].(*entity.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRequestedOrder indicates an expected call of GetRequestedOrder.
func (mr *MockOrderMySQLRepoMockRecorder) GetRequestedOrder(ctx, seqOnlineOrder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestedOrder", reflect.TypeOf((*MockOrderMySQLRepo)(nil).GetRequestedOrder), ctx, seqOnlineOrder)
}
